/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        // zmk,matrix_transform = &five_column_transform;
    };
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD0";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   | 
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB       &kp Q           &kp W         &kp F        &mt F4 P          &kp B          &kp J        &mt F6 L           &kp U        &kp Y            &trans            &kp BSPC
&kp LEFT_ALT  &mt LEFT_WIN A  &mt ESCAPE R  &mt LCTRL S  &mt LEFT_SHIFT T  &kp G          &kp M        &mt RIGHT_SHIFT N  &mt RCTRL E  &mt RIGHT_ALT I  &mt LEFT_WIN O    &trans
&trans        &kp X           &kp C         &kp D        &kp V             &kp Z          &kp K        &kp H              &kp COMMA    &kp DOT          &mt ESCAPE SLASH  &trans
                                            &trans       &to 3             &lt 1 SPACE    &lt 2 ENTER  &to 3              &mo 5
            >;
        };

        lower_layer {
            display-name = "NUMBER";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N1  &kp N2          &kp N3  &kp N4     &kp N5       &kp N6     &kp N7    &kp N8  &kp N9     &kp N0    &kp BSPC
&trans  &trans  &kp LEFT_ARROW  &trans  &kp GRAVE  &kp TILDE    &kp LEFT   &kp DOWN  &kp UP  &kp RIGHT  &kp HOME  &kp PG_UP
&trans  &trans  &trans          &trans  &trans     &trans       &trans     &trans    &trans  &trans     &kp END   &kp PG_DN
                                &to 4   &trans     &kp SPACE    &kp ENTER  &trans    &trans
            >;
        };

        raise_layer {
            display-name = "SYMBOL";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCL  &kp AT                &kp HASH               &kp DLLR           &kp PRCNT        &kp CARET  &kp AMPS   &kp ASTRK         &kp BACKSLASH      &trans  &kp BSPC
&trans  &none     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp GRAVE          &kp TILDE        &kp EQUAL  &kp MINUS  &kp LEFT_BRACE    &kp RIGHT_BRACE    &trans  &trans
&trans  &trans    &kp PIPE              &kp SQT                &kp DOUBLE_QUOTES  &trans           &kp UNDER  &kp PLUS   &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans  &trans
                                        &trans                 &kp COLON          &kp SEMICOLON    &kp RET    &trans     &trans
            >;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&kp TAB       &kp F1          &kp F2          &kp F3          &kp F4           &kp F5             &kp F6           &kp F7          &kp F8          &kp F9           &kp F10          &kp F11
&kp ESCAPE    &msc SCRL_LEFT  &msc SCRL_UP    &mmv MOVE_UP    &msc SCRL_DOWN   &msc SCRL_RIGHT    &msc SCRL_LEFT   &msc SCRL_DOWN  &mmv MOVE_UP    &msc SCRL_UP     &msc SCRL_RIGHT  &kp F12
&kp LEFT_ALT  &kp DELETE      &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &kp PRINTSCREEN    &kp PRINTSCREEN  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &kp DELETE       &kp ESCAPE
                                              &to 0           &mkp MB2         &mkp MB1           &mkp MB1         &mkp MB2        &to 0
            >;
        };

        layer_4 {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E   &kp R   &kp T        &kp Y      &kp U     &kp I      &kp O    &kp P     &kp BSPC
&kp LALT   &kp A  &kp S  &kp D   &kp F   &kp G        &kp H      &kp J     &kp K      &kp L    &kp SEMI  &kp F4
&kp LSHFT  &kp Z  &kp X  &kp C   &kp V   &kp B        &kp N      &kp M     &kp COMMA  &kp DOT  &kp FSLH  &kp ESCAPE
                         &kp N2  &kp N1  &kp SPACE    &kp ENTER  &kp LGUI  &to 0
            >;
        };

        layer_5 {
            display-name = "functions";
            bindings = <
&bootloader  &trans           &trans          &trans        &trans        &trans             &out OUT_BLE     &out OUT_USB     &trans           &trans           &trans  &bootloader
&trans       &bt BT_CLR_ALL   &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3       &trans           &trans           &trans           &trans           &trans  &trans
&trans       &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &trans        &trans        &rgb_ug RGB_EFF    &rgb_ug RGB_EFR  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &trans  &trans
                                              &trans        &trans        &trans             &trans           &trans           &trans
            >;
        };
    };
};
